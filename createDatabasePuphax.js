import mysql from 'mysql2/promise';
import dotenv from 'dotenv';
dotenv.config();

const pool = mysql.createPool({
  host: 'localhost',
  user: 'root',
  database: 'testdb',
  password: process.env.DB_PASSWORD,
});

const tables = [
  `CREATE TABLE IF NOT EXISTS ATCKONYV (
        ATC VARCHAR(7) PRIMARY KEY NOT NULL,
        MEGNEV VARCHAR(255),
        ANGOL VARCHAR(250),
        HATOANYAG VARCHAR(250)
    )`,
  `CREATE TABLE IF NOT EXISTS CEGEK (
        ID INT PRIMARY KEY NOT NULL,
        NEV VARCHAR(255),
        ERV_KEZD DATE,
        ERV_VEGE DATE NOT NULL
    )`,
    `CREATE TABLE IF NOT EXISTS ISOKONYV (
        ISO VARCHAR(15) PRIMARY KEY NOT NULL,
        MEGNEVEZES VARCHAR(255),
        OLDALISAG INT,
        FFNO INT
    )`,
    `CREATE TABLE IF NOT EXISTS BRAND (
        ID INT PRIMARY KEY NOT NULL,
        NEV VARCHAR(255) NOT NULL,
        INDEX IDX_CSALADNEV (NEV)
    )`,
    `CREATE TABLE IF NOT EXISTS NICHE (
        ID INT PRIMARY KEY NOT NULL,
        EGYEN_ID INT,
        LEIRAS VARCHAR(255) NOT NULL
    )`,
    `CREATE TABLE IF NOT EXISTS KIINTOR (
        ID INT PRIMARY KEY NOT NULL,
        JAROFEKVO VARCHAR(20),
        MEGYE VARCHAR(100),
        INTKOD VARCHAR(20),
        INTEZET VARCHAR(255),
        GYFKOD VARCHAR(20),
        EGYSEG VARCHAR(250),
        PECSETKOD VARCHAR(6)
    )`,
    `CREATE TABLE IF NOT EXISTS BNOKODOK (
        ID INT PRIMARY KEY NOT NULL,
        KOD VARCHAR(32) NOT NULL,
        LEIRAS VARCHAR(4000),
        INDEX IDX_BNOKODOKKOD (KOD)
    )`,
        // AUTO_INCREMENT:
    `CREATE TABLE IF NOT EXISTS SZAKVKODOK (
        ID INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
        KOD INT NOT NULL,
        LEIRAS VARCHAR(255) NOT NULL,
        MEGFELEL INT
    )`,
    `CREATE TABLE IF NOT EXISTS ORVOSOK (
        PECSETKOD VARCHAR(6) NOT NULL,
        SZAKV_ID INT NOT NULL,
        FOREIGN KEY (SZAKV_ID) REFERENCES SZAKVKODOK(ID),
        PRIMARY KEY (PECSETKOD, SZAKV_ID),
        INDEX IDX_ORVOSOK_KIH (SZAKV_ID)
    )`,
    `CREATE TABLE IF NOT EXISTS TERMEK (
        ID INT PRIMARY KEY NOT NULL,
        PARENT_ID INT,
        ERV_KEZD DATE NOT NULL,
        ERV_VEGE DATE NOT NULL,
        TERMEKKOD VARCHAR(3) NOT NULL,
        KOZHID INT,
        TTT VARCHAR(9) NOT NULL,
        TK VARCHAR(64),
        TKTORLES VARCHAR(2),
        TKTORLESDAT DATE,
        EANKOD VARCHAR(13),
        BRAND_ID INT NOT NULL,
        NEV VARCHAR(255) NOT NULL,
        KISZNEV VARCHAR(255),
        ATC VARCHAR(7),
        ISO VARCHAR(15),
        HATOANYAG VARCHAR(128),
        ADAGMOD VARCHAR(32),
        GYFORMA VARCHAR(128),
        RENDELHET VARCHAR(3),
        EGYEN_ID INT,
        HELYETTESITH INT,
        POTENCIA VARCHAR(64),
        OHATO_MENNY INT,
        HATO_MENNY INT,
        HATO_EGYS VARCHAR(50),
        KISZ_MENNY INT,
        KISZ_EGYS VARCHAR(50),
        DDD_MENNY INT,
        DDD_EGYS VARCHAR(50),
        DDD_FAKTOR INT,
        DOT INT,
        ADAG_MENNY INT,
        ADAG_EGYS VARCHAR(50),
        EGYEDI INT,
        OLDALISAG INT,
        TOBBLGAR INT,
        PATIKA VARCHAR(1),
        DOBAZON INT,
        KERESZTJELZES VARCHAR(32),
        FORGENGT_ID INT,
        FORGALMAZ_ID INT,
        FORGALOMBAN INT,
        FOREIGN KEY (ATC) REFERENCES ATCKONYV(ATC),
        FOREIGN KEY (PARENT_ID) REFERENCES TERMEK(ID),
        FOREIGN KEY (BRAND_ID) REFERENCES BRAND(ID),
        FOREIGN KEY (FORGENGT_ID) REFERENCES CEGEK(ID),
        FOREIGN KEY (FORGALMAZ_ID) REFERENCES CEGEK(ID),
        INDEX IDX_TERMEK_ERV (ERV_KEZD, ERV_VEGE),
        INDEX IDX_TERMEK_UQ (ERV_KEZD)
    )`,
    `CREATE TABLE IF NOT EXISTS TAMALAP (
        ID INT PRIMARY KEY NOT NULL,
        TERMEK_ID INT NOT NULL,
        ERV_KEZD DATE NOT NULL,
        ERV_VEGE DATE NOT NULL,
        TERMAR INT NOT NULL,
        NKAR INT NOT NULL,
        FAN INT NOT NULL,
        FAB INT NOT NULL,
        MAXFAB INT NOT NULL,
        AFA INT NOT NULL,
        NTK INT,
        EGYSEGAR INT,
        BESOROLAS INT,
        PRAS_TERMEK INT,
        NICHE_ID INT,
        KEST_TERM INT,
        KGYKERET INT NOT NULL,
        KULONL100 VARCHAR(8) NOT NULL,
        FOREIGN KEY (TERMEK_ID) REFERENCES TERMEK(ID),
        FOREIGN KEY (NICHE_ID) REFERENCES NICHE(ID),
        INDEX IDX_TAMALAP_ERVVEGE (ERV_VEGE),
        INDEX IDX_TAMALAP_UQ (TERMEK_ID, ERV_KEZD)
    )`,
    `CREATE TABLE IF NOT EXISTS KATEGTAM (
        ID INT PRIMARY KEY NOT NULL,
        TAMALAP_ID INT NOT NULL,
        KATEGORIA VARCHAR(1) NOT NULL,
        TAMTECHN VARCHAR(8) NOT NULL,
        KGYIRHATO INT NOT NULL,
        MIN_ELETKOR INT,
        MAX_ELETKOR INT,
        NEW INT NOT NULL,
        TAMSZAZ INT NOT NULL,
        FIX_ID INT,
        REFNTK INT,
        NTAM INT NOT NULL,
        BTAM INT NOT NULL,
        TERDIJ INT,
        NTKTD INT,
        MIHAID INT,
        MIHACEL INT,
        MIHASTAT INT,
        KIHI VARCHAR(10),
        FELME VARCHAR(10),
        FOREIGN KEY (TAMALAP_ID) REFERENCES TAMALAP(ID),
        INDEX IDX_KATEGTAM_UQ (TAMALAP_ID, KATEGORIA)
    )`,
    `CREATE TABLE IF NOT EXISTS EUPONTOK (
        ID INT PRIMARY KEY NOT NULL,
        PONTSZAM INT NOT NULL,
        PERJELZES VARCHAR(32),
        FELIRAS VARCHAR(4000),
        MEGJEGYZES VARCHAR(4000),
        INDEX IDX_EUIPONTKODPER (PONTSZAM, PERJELZES)
    )`,
    `CREATE TABLE IF NOT EXISTS EUINDIKACIOK (
        ID INT PRIMARY KEY NOT NULL,
        EUPONT_ID INT NOT NULL,
        NDX INT NOT NULL,
        LEIRAS VARCHAR(4000) NOT NULL,
        FOREIGN KEY (EUPONT_ID) REFERENCES EUPONTOK(ID),
        INDEX IDX_EUINDIKACIOKUQ (EUPONT_ID, NDX)
    )`,
    `CREATE TABLE IF NOT EXISTS EUHOZZAR (
        KATEGTAM_ID INT NOT NULL,
        EUPONT_ID INT NOT NULL,
        OFFLABEL INT NOT NULL,
        PRIMARY KEY (KATEGTAM_ID, EUPONT_ID),
        FOREIGN KEY (KATEGTAM_ID) REFERENCES KATEGTAM(ID),
        FOREIGN KEY (EUPONT_ID) REFERENCES EUPONTOK(ID)
    )`,
    `CREATE TABLE IF NOT EXISTS KIHIRDETES (
        ID INT PRIMARY KEY NOT NULL,
        ERV_DATUM DATE NOT NULL,
        KESZ_DATUM DATE NOT NULL,
        MUNKAVER INT,
        STATUS CHAR,
        INDEX IDX_KIHIRDETES_ERV (ERV_DATUM)
    )`,
    `CREATE TABLE IF NOT EXISTS BNOHOZZAR (
        EUPONT_ID INT NOT NULL,
        BNO_ID INT NOT NULL,
        PRIMARY KEY (EUPONT_ID, BNO_ID),
        FOREIGN KEY (EUPONT_ID) REFERENCES EUPONTOK(ID),
        FOREIGN KEY (BNO_ID) REFERENCES BNOKODOK(ID)
    )`,
    `CREATE TABLE IF NOT EXISTS EUJOGHOZZAR (
        ID INT PRIMARY KEY NOT NULL,
        EUPONT_ID INT NOT NULL,
        KATEGORIA_ID INT NOT NULL,
        JOGOSULT_ID INT NOT NULL,
        JIDOKORLAT INT NOT NULL,
        SZAKV_ID INT NOT NULL,
        KIINT_ID INT NOT NULL,
        FOREIGN KEY (EUPONT_ID) REFERENCES EUPONTOK(ID),
        FOREIGN KEY (SZAKV_ID) REFERENCES SZAKVKODOK(ID),
        FOREIGN KEY (KIINT_ID) REFERENCES KIINTOR(ID),
        INDEX IDX_EUJOGHOZZARUQ (EUPONT_ID, KATEGORIA_ID, JOGOSULT_ID, SZAKV_ID, KIINT_ID)
    )`,
    `CREATE TABLE IF NOT EXISTS KODSZOTAR (
        ID INT PRIMARY KEY NOT NULL,
        KATEGORIA VARCHAR(30),
        FOTIPUS VARCHAR(64) NOT NULL,
        ALTIPUS VARCHAR(64) NOT NULL,
        NDX INT,
        SZOVEGKOD VARCHAR(64),
        SZAMKOD INT,
        DEFERTEK VARCHAR(250) NOT NULL,
        LEIRAS VARCHAR(255),
        ERV_KEZD DATE,
        ERV_VEG DATE,
        INDEX IDX_KODSZOTARUQ (FOTIPUS, ALTIPUS, NDX)
    )`
];

export const createDatabase = async () => {
  try {
    for (const table of tables) {
        await pool.execute(table);
    }
    console.log('Database created.');
    await pool.end();
  } catch (error) {
    console.error('Query error:', error);
    await pool.end();
  }
};

createDatabase();
